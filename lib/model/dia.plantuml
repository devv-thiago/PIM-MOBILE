@startuml classes




    enum Acessos {
        CD0001
        CD0002
        CD0003
        CD0004
        CD0005
        CD0006
        CT0001
        CT0002
        CT0003
        CT0004
        CT0005
        CS0001
        CS0002
        CS0003
        CS0004
        NF0001
    }




    enum ResultadoAnalise {
        APROVADO
        REPROVADO
        ANALISE
    }




    enum SituacaoOrdemProd {
        NAO_INICIADO
        PRODUZINDO
        ENVIADO
        ENTREGUE
    }




    enum SituacaoPedidoCompra {
        APROVADO
        REPROVADO
        ANALISE
    }




    abstract class Produto{
        + nome : string
        + peso : double
        + preco : double
        + dataVencimento : Datetime
    }




    class ProdutoAcabado {
        + receita : string
        + dataPlantio : Datetime
        + dataColheita : Datetime
        + lote : string
        + CalcularValidade() : bool
    }




    class ProdutoInsumo {
        + Fornecedor : string
        + ObterFornecedor() : Fornecedor
    }




    class Usuario{
        - nome : string
        - senha : string
        + listaAcesso : List<Acessos>
        + Login() : bool
        + Logoff() : void
        + EditarSenha() : bool
        + BuscaAcessos() : List<Acessos>
    }




    class RegistroQualidade {
        + loteAnalisado : string
        + dataAnalise : Datetime
        + resultado : ResultadoAnalise
        + RealizarAnalise() : ResultadoAnalise
    }




    class Fornecedor {
        + nome : string
        + cnpj : string
        + contato : string
        + razaoSocial : string
        + produtos : List<ProdutoInsumo>
        + ListarProdutos() : List<ProdutoInsumo>
        # AtualizarContato(novoContato: string) : void
    }




    class Cliente {
        + nome : string
        - documento : string
        + endereco : EnderecoEntrega
        + AtualizarEndereco(EnderecoEntrega novoEndereco) : void
        + ConsultarHistoricoVendas() : List<PedidoVenda>
    }




    abstract class Pedido {
        + numeroPedido : int
        + preco : double
    }




    class PedidoVenda {
        + situacao : String
        + cliente : Cliente
        + itensPedido : List<ProdutoAcabado>
        + AdicionarItem() : string
        + RemoverItem() : string
        + CalcularTotal() : double
    }




    class PedidoCompra {
        + situacao : SituacaoPedidoCompra
        + fornecedor : Fornecedor
        + itensPedido : List<ProdutoInsumo>
        + AdicionarItem() : string
        + RemoverItem() : string
        + CalcularTotal() : double
    }




    class EnderecoEntrega {
        + rua : string
        + numero : int
        + complemento : string
    }




    class ArquivoVenda{
        + dataGeracao : Datetime
        + valorTotal : double
        + itens : string
        # GerarArquivo() : void
    }


    class Colaborador {
        + nome : string
        + cpf : string
        + cargo : string
        + salario : double
        + dataNascimento : Datetime
        + dataAdmissao : Datetime
        + dataDesligamento : Datetime
        + AlterarSalario(double novoSalario) : void
        + Promover(Cargo novoCargo) : void
    }




    class NotaFiscal {
        + numeroNF : string
        + dataEmissao : Datetime
        + cliente : Cliente
        + valor : double
        + CriarArquivoNF() : ArquivoVenda
    }




    class OrdemProducao {
        + Id : int  
        + produto : ProdutoAcabado
        + status : SituacaoOrdemProd
        + dataInicio : Datetime
        + dataFim : Datetime
        + pedidoVenda : PedidoVenda
        + quantidadeTotal : int
        + IniciarProducao() : void
        + ConcluirProducao() : void
        # AtualizarStatus(SituacaoOrdemProd novaSituacao) : void
    }




Usuario           *-- Acessos
RegistroQualidade *-- ResultadoAnalise
Fornecedor        *-- ProdutoInsumo
PedidoCompra      *-- SituacaoPedidoCompra
PedidoVenda       *-- Cliente
Cliente           *-- EnderecoEntrega
NotaFiscal        *-- Cliente
OrdemProducao     *-- SituacaoOrdemProd




Produto <|-- ProdutoAcabado
Produto <|-- ProdutoInsumo
Pedido  <|-- PedidoCompra
Pedido  <|-- PedidoVenda




PedidoVenda   *-- ProdutoAcabado
PedidoCompra  *-- ProdutoInsumo
OrdemProducao *-- ProdutoAcabado
ArquivoVenda  *-- NotaFiscal
OrdemProducao *-- PedidoVenda




@enduml
